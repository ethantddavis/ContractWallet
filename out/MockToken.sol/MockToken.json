{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604080518082018252600a81526904d6f636b2045524332360b41b6020808301918252835180850190945260048452634d45524360e01b90840152815191929161005d91600391610176565b508051610071906004906020840190610176565b50505061008e3369d3c21bcecceda100000061009360201b60201c565b61026f565b6001600160a01b0382166100ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546100ff919061020f565b90915550506001600160a01b0382166000908152602081905260408120805483929061012c90849061020f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805461018290610235565b90600052602060002090601f0160209004810192826101a457600085556101ea565b82601f106101bd57805160ff19168380011785556101ea565b828001600101855582156101ea579182015b828111156101ea5782518255916020019190600101906101cf565b506101f69291506101fa565b5090565b5b808211156101f657600081556001016101fb565b6000821982111561023057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061024957607f821691505b60208210810361026957634e487b7160e01b600052602260045260246000fd5b50919050565b610886806200027f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220a241088f5c602dfcb44419004f0c113f8ab870970293aec87609ee745cfc0c8f64736f6c634300080d0033",
    "sourceMap": "118:129:22:-:0;;;153:91;;;;;;;;;-1:-1:-1;2031:116:5;;;;;;;;;;;-1:-1:-1;;;2031:116:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2031:116:5;;;;2098:13;;2031:116;;;2098:13;;:5;;:13;:::i;:::-;-1:-1:-1;2122:17:5;;;;:7;;:17;;;;;:::i;:::-;;2031:116;;207:29:22::1;213:10;225;207:5;;;:29;;:::i;:::-;118:129:::0;;8667:399:5;-1:-1:-1;;;;;8751:21:5;;8743:65;;;;-1:-1:-1;;;8743:65:5;;216:2:23;8743:65:5;;;198:21:23;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8743:65:5;;;;;;;;8899:6;8883:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8916:18:5;;:9;:18;;;;;;;;;;:28;;8938:6;;8916:9;:28;;8938:6;;8916:28;:::i;:::-;;;;-1:-1:-1;;8960:37:5;;750:25:23;;;-1:-1:-1;;;;;8960:37:5;;;8977:1;;8960:37;;738:2:23;723:18;8960:37:5;;;;;;;8667:399;;:::o;118:129:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;118:129:22;;;-1:-1:-1;118:129:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:23;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:23;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;118:129:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220a241088f5c602dfcb44419004f0c113f8ab870970293aec87609ee745cfc0c8f64736f6c634300080d0033",
    "sourceMap": "118:129:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:100:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4568:201;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:23;;1211:22;1193:41;;1181:2;1166:18;4568:201:5;1053:187:23;3337:108:5;3425:12;;3337:108;;;1391:25:23;;;1379:2;1364:18;3337:108:5;1245:177:23;5349:295:5;;;;;;:::i;:::-;;:::i;3179:93::-;;;3262:2;1902:36:23;;1890:2;1875:18;3179:93:5;1760:184:23;6053:238:5;;;;;;:::i;:::-;;:::i;3508:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3609:18:5;3582:7;3609:18;;;;;;;;;;;;3508:127;2436:104;;;:::i;6794:436::-;;;;;;:::i;:::-;;:::i;3841:193::-;;;;;;:::i;:::-;;:::i;4097:151::-;;;;;;:::i;:::-;;:::i;2217:100::-;2271:13;2304:5;2297:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2217:100;:::o;4568:201::-;4651:4;736:10:8;4707:32:5;736:10:8;4723:7:5;4732:6;4707:8;:32::i;:::-;-1:-1:-1;4757:4:5;;4568:201;-1:-1:-1;;;4568:201:5:o;5349:295::-;5480:4;736:10:8;5538:38:5;5554:4;736:10:8;5569:6:5;5538:15;:38::i;:::-;5587:27;5597:4;5603:2;5607:6;5587:9;:27::i;:::-;-1:-1:-1;5632:4:5;;5349:295;-1:-1:-1;;;;5349:295:5:o;6053:238::-;6141:4;736:10:8;6197:64:5;736:10:8;6213:7:5;6250:10;6222:25;736:10:8;6213:7:5;6222:9;:25::i;:::-;:38;;;;:::i;:::-;6197:8;:64::i;2436:104::-;2492:13;2525:7;2518:14;;;;;:::i;6794:436::-;6887:4;736:10:8;6887:4:5;6970:25;736:10:8;6987:7:5;6970:9;:25::i;:::-;6943:52;;7034:15;7014:16;:35;;7006:85;;;;-1:-1:-1;;;7006:85:5;;3222:2:23;7006:85:5;;;3204:21:23;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:23;;;3344:35;3396:19;;7006:85:5;;;;;;;;;7127:60;7136:5;7143:7;7171:15;7152:16;:34;7127:8;:60::i;3841:193::-;3920:4;736:10:8;3976:28:5;736:10:8;3993:2:5;3997:6;3976:9;:28::i;4097:151::-;-1:-1:-1;;;;;4213:18:5;;;4186:7;4213:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4097:151::o;10428:380::-;-1:-1:-1;;;;;10564:19:5;;10556:68;;;;-1:-1:-1;;;10556:68:5;;3628:2:23;10556:68:5;;;3610:21:23;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:23;;;3750:34;3801:19;;10556:68:5;3426:400:23;10556:68:5;-1:-1:-1;;;;;10643:21:5;;10635:68;;;;-1:-1:-1;;;10635:68:5;;4033:2:23;10635:68:5;;;4015:21:23;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:23;;;4155:32;4204:19;;10635:68:5;3831:398:23;10635:68:5;-1:-1:-1;;;;;10716:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10768:32;;1391:25:23;;;10768:32:5;;1364:18:23;10768:32:5;;;;;;;10428:380;;;:::o;11099:453::-;11234:24;11261:25;11271:5;11278:7;11261:9;:25::i;:::-;11234:52;;-1:-1:-1;;11301:16:5;:37;11297:248;;11383:6;11363:16;:26;;11355:68;;;;-1:-1:-1;;;11355:68:5;;4436:2:23;11355:68:5;;;4418:21:23;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11355:68:5;4234:353:23;11355:68:5;11467:51;11476:5;11483:7;11511:6;11492:16;:25;11467:8;:51::i;:::-;11223:329;11099:453;;;:::o;7709:671::-;-1:-1:-1;;;;;7840:18:5;;7832:68;;;;-1:-1:-1;;;7832:68:5;;4794:2:23;7832:68:5;;;4776:21:23;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:23;;;4916:35;4968:19;;7832:68:5;4592:401:23;7832:68:5;-1:-1:-1;;;;;7919:16:5;;7911:64;;;;-1:-1:-1;;;7911:64:5;;5200:2:23;7911:64:5;;;5182:21:23;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:23;;;5322:33;5372:19;;7911:64:5;4998:399:23;7911:64:5;-1:-1:-1;;;;;8061:15:5;;8039:19;8061:15;;;;;;;;;;;8095:21;;;;8087:72;;;;-1:-1:-1;;;8087:72:5;;5604:2:23;8087:72:5;;;5586:21:23;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:23;;;5726:36;5779:19;;8087:72:5;5402:402:23;8087:72:5;-1:-1:-1;;;;;8195:15:5;;;:9;:15;;;;;;;;;;;8213:20;;;8195:38;;8255:13;;;;;;;;:23;;8227:6;;8195:9;8255:23;;8227:6;;8255:23;:::i;:::-;;;;;;;;8311:2;-1:-1:-1;;;;;8296:26:5;8305:4;-1:-1:-1;;;;;8296:26:5;;8315:6;8296:26;;;;1391:25:23;;1379:2;1364:18;;1245:177;8296:26:5;;;;;;;;8335:37;12152:125;14:597:23;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:23;574:15;-1:-1:-1;;570:29:23;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:23:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:23;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:23:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:23:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:23;;2790:225::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "C:\\Users\\Ethan Davis\\Documents\\Files\\defiWizardry\\ContractWallet\\test\\mocks\\MockToken.sol",
    "id": 21256,
    "exportedSymbols": {
      "Context": [
        21380
      ],
      "ERC20": [
        42471
      ],
      "IERC20": [
        21333
      ],
      "IERC20Metadata": [
        21358
      ],
      "MockToken": [
        21255
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:215:22",
    "nodes": [
      {
        "id": 21237,
        "nodeType": "PragmaDirective",
        "src": "32:23:22",
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21238,
        "nodeType": "ImportDirective",
        "src": "59:55:22",
        "absolutePath": "C:/Users/Ethan Davis/Documents/Files/defiWizardry/ContractWallet/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21256,
        "sourceUnit": 42472,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21255,
        "nodeType": "ContractDefinition",
        "src": "118:129:22",
        "nodes": [
          {
            "id": 21254,
            "nodeType": "FunctionDefinition",
            "src": "153:91:22",
            "body": {
              "id": 21253,
              "nodeType": "Block",
              "src": "196:48:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "213:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "213:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 21250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "225:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 21247,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42288,
                      "src": "207:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "207:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21252,
                  "nodeType": "ExpressionStatement",
                  "src": "207:29:22"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f636b204552433230",
                    "id": 21243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "174:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a5c9260bf133e670eeaf4d41f5c4289fc23bb146bf11ba8fa70a2ea91ba1a330",
                      "typeString": "literal_string \"Mock ERC20\""
                    },
                    "value": "Mock ERC20"
                  },
                  {
                    "hexValue": "4d455243",
                    "id": 21244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "188:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4fadf8299996fe7c28b27ca3109cf5401d8718238dbd31d3a686912e43b46ede",
                      "typeString": "literal_string \"MERC\""
                    },
                    "value": "MERC"
                  }
                ],
                "id": 21245,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21242,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42471,
                  "src": "167:5:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "167:28:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:22"
            },
            "returnParameters": {
              "id": 21246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "196:0:22"
            },
            "scope": 21255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21239,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42471,
              "src": "140:5:22"
            },
            "id": 21240,
            "nodeType": "InheritanceSpecifier",
            "src": "140:5:22"
          }
        ],
        "canonicalName": "MockToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21255,
          42471,
          21358,
          21333,
          21380
        ],
        "name": "MockToken",
        "nameLocation": "127:9:22",
        "scope": 21256,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  }
}